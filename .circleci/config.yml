version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:14-jdk-buster

    steps:
      - checkout

      - run:
          name: save tag
          command:           echo "$(git tag -l --points-at HEAD)" > ~/tag.txt

      - restore_cache:
          key: circleci-jnote{{ checksum "pom.xml" }}

      - run:
          name: test jnote
          command: mvn test

      - save_cache:
          paths:
            ~/.m2
          key: circleci-jnote{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/
          paths: tag.txt

  build-installer:
    machine:
      image: "windows-server-2019-vs2019:stable"
      resource_class: "windows.medium"
      shell: bash.exe
    steps:
      - checkout

      - restore_cache:
          key: circleci-jnote_packages-{{ checksum "download_jdk.sh" }}

      - run:
          name: install dependencies
          command: ./install_dependencies.sh

      - run:
          name: download jdk 14
          command: ./download_jdk.sh

      - run:
          name: unzip jdk
          command: ./unzip_jdk.sh

      - save_cache:
          paths:
            jdk-14.0.1
          key: circleci-jnote_packages-{{ checksum "download_jdk.sh" }}

      - run:
          name: build installer
          command: ./package.sh

      - store_artifacts:
          path: ./target/installer/jnote-1.0.msi
          destination: jnote-64.msi

      - persist_to_workspace:
          root: ~/
          paths: jnote-64.msi

  publish-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./workspace

      - run:
          name: publish release
          command: |
            CIRCLE_TAG="$(cat ./workspace/tag.txt)"
            ghr -t "${GITHUB_TOKEN}" \
                -u "${CIRCLE_PROJECT_USERNAME}" \
                -r "${CIRCLE_PROJECT_REPONAME}" \
                -c "${CIRCLE_SHA1}" \
                -replace \
                "${CIRCLE_TAG}" \
                "/root/project/workspace/jnote-64.msi"

release-filter: &release-filter
  filters:
    # ignore any commit on any branch by default
    branches:
      ignore: /.*/
    # only act on version tags
    tags:
      only: /^v\d+\.\d+\.\d+$/

workflows:
  version: 2
  build_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build-installer:
          <<: *release-filter
          requires:
            - build
      - publish-release:
          <<: *release-filter
          requires:
            - build-installer